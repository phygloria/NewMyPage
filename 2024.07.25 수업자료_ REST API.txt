<REST API>
REST(Representional State Transfer)은 API 작동 방식에 대해 조건을 부과하는 소프트웨어 아키텍처를 의미하며  REST는 처음 인터넷과 같은 복잡한 네트워크에서 통신을 관리하기 위한 지침으로 만들어 지게 되었으며 REST 기반의 네트워크 아키텍처를 사용하는 대규모의 고성능 통신을 안정적으로 지원할 수 있다. 

무상태성(Statelessness):
REST 아키텍처는 서버가 클라이언트에 대한 상태 정보를 저장하지 않는 무상태성을 가지고 있습니다.
이를 통해 서버의 확장성이 높아지고, 병렬 처리가 용이해져 대규모 통신을 지원할 수 있습니다

캐싱(Caching):
REST 아키텍처는 HTTP 프로토콜의 캐싱 메커니즘을 활용할 수 있습니다.
자주 변경되지 않는 데이터를 캐싱하면 서버 부하를 줄일 수 있어 대규모 통신을 지원할 수 있습니다.

계층화(Layered System):
REST 아키텍처는 계층화된 시스템 구조를 가지고 있습니다.
이를 통해 로드 밸런서, 프록시, 캐시 등의 중간 계층을 추가할 수 있어 확장성과 성능을 높일 수 있습니다.

유니폼 인터페이스(Uniform Interface):
REST 아키텍처는 HTTP 메서드(GET, POST, PUT, DELETE 등)를 사용하여 자원을 조작하는 유니폼 인터페이스를 제공합니다.
이를 통해 클라이언트와 서버 간의 결합도를 낮추고, 독립적인 개발과 배포가 가능해져 대규모 시스템 구축에 유리합니다.

자원 중심 설계(Resource-Oriented Design):
REST 아키텍처는 자원(Resource)을 중심으로 설계되어 있습니다.
이를 통해 자원 간의 관계를 명확히 정의할 수 있고, 확장성 높은 시스템 설계가 가능합니다.
hppt.post /posts

- 확장성
    REST API를 구현하는 시스템은 REST 클라이언트 - 서버 상호 작용을 최적화하기 때문에 효율적으로 크기를 조정할 수 있으며 무상태는 서버가 과거 클라이언트 요청 정보를 유지할 필요가 없기 때문에 서버 로드를 제거한다. 캐싱은 일부 클라이언트-서버 상호 작용을 부분적으로 또는 완전히 제거해 효율적이며 이러한 기능은 성능을 저하시키는 통신 병목 현상을 일으키지 않으면서 확장성을 지원하게 된다.
    
- 유연성
    RESTFul 웹 서비스는 완전한 클라이언트-서버 분리를 지원하고 있으며 각 부분이 독립적으로 발전할 수 있도록 다양한 서버 구성 요소를 단순화하고 분리한다. 서버 애플리케이션의 플랫폼 또는 기술 변경은 클라이언트 애플리케이션에 영향을 주지 않는다.
    
- 독립성
    REST API는 사용되는 기술과 독립성을 유지하며 API 설계에 영향을 주지 않고 다양한 프로그래밍 언어로 클라이언트 및 서버 애플리케이션을 모두 작성할 수 있다.


디자인 가이드
규칙 : 도큐먼트 이름으로는 단수 명사를 사용해야 한다. (복수)
도큐먼트 : 데이터베이스의 row 단위 또는 리스트 컬렉션의 하나의 객체단위로 단일 정보를 포함하고 있는 데이터

스토어 이름으로는 복수 명사를 사용해야 한다. (복수 명사)
    스토어 : 컬렉션과 같이 도큐먼트들의 집합으로 관리 주체는 클라이언트이며 클라이언트는 기존의 리소스를 스토어 추가가하거나 삭제 변경할 수 있지만 새로운 리소스를 생성할 수 없다.

규칙 : 경로 부분 중 변하는 부분은 유일한 값으로 대체한다.

CRUD 기능을 나타내는 것은 URI에 사용하지 않는다. 
해당 crud의 내용은 http 메서드를 이용하여 표현된다.
GET http://restapi.example.com/basckets/read(X)
GET http://restapi.example.com/basckets (0)


- query string parameter를 사용하는 경우
    1. 검색(검색 조건, 검색값)
    /menus?condition=category&value=한식
    2. 페이징(offset and limit)
    /menus?offset=10&limit=10
    3. 정렬(기준 or 방식)
    /menus?criteria=code&order=DESC
    4. 필터(요청하는 특정 컬럼)
    /menus?filter=name
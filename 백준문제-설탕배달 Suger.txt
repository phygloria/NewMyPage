백준문제 2839번 설탕배달 Suger
-----------------
[문제 이해하기]

선택할 조합 소스는 두가지
3kg 봉지 && 5kg 봉지

봉지갯수를 최대한 줄여서 배달하기

입력 N
: 배달해야할 설탕의 총 Kg 
, 최소 3kg봉지 이상

출력 
: 배달할 봉지의 최소 개수 (봉지의 kg 합은 N값에 최대근접값?)
봉지 개수는 3kg,5kg구분 없이 개수만.
N에 완전히 맞춰지지 않으면 -1출력.


=========================================
[간단한 플로우시나리오]

1. N을 입력받는다.
: 배달할 설탕 총 Kg의 값이다. 총 무게로부터 3kg,5kg봉지를 어떻게 조합해서 
 가장 적은 봉지로 배달할수있는지 계산한다.


2. N을 5나 3으로 나누기를 해야하나?

큰수. 5로 먼저 나누고 
소수점은 반올림한다고 하면 최소개수?!?
반올림시 무게는 +0.3? //3kg으로 +반올림? = 최소개수

반올림도 이상할때. +0.3kg이 부족..무게합이 N값이 안될 때 ?

5. N에 완전히 맞춰지지 않으면 -1출력. <- 이거 어케하는거지..? 예외처리같은건가?

@@
=============================================
[GPT에 물어본 문제해결 시나리오]

1. 입력받기 : N값
2. 초기설정 : 5kg 봉지와 3kg 봉지의 개수를 0으로 시작.
3. 반복문 : 먼저 5kg봉지를 최대한 많이 사용한다.
	- N이 5로 나누어떨어지면 그만큼 5kg봉지 사용. = 최소개수
	- N이 5로 나누어떨어지지 않으면 5kg을 하나 줄이고, 남은 N을 3으로 다시 나눔?
4. 결과확인 :
	N이 0이 되면, 사용한 5kg봉지와 3kg 봉지의 합을 출력한다.
	N이 0이 되지 않고 음수가 되면 -1을 출력한다?? 
// 음수가 되는게 잘 이해가 안됨; 
// 그치만 5로 나눈뒤 남은게 3으로 안떨어지는게 종종 있다!


=============================================
[코드 플로우 시나리오 디테일! ]

1. N값 입력받기
//입력받는 이유 : 배달할 설탕 총 Kg의 값이다. 
//총 무게로부터 3kg,5kg봉지를 어떻게 조합해서 가장 적은 봉지로 배달할수있는지 계산한다.

2. 5kg봉지와 3kg봉지를 int값으로 초기화한다 = 0;
//숫자니까 int. 시작은 0개. 상근이는 아직 빈손. 앞으로 몇개가 될지 찾아낼 것.

3. 반복문 :  횟수를 알수없으니 while문을 사용한다.
//최종 봉지개수를 알 수 있을 때까지 N값을 나누기를 반복.

4. 먼저 5로 나누어떨어지는지 확인할 수식을 써보기.
	N / 5 ? ?? = 0인가? //0으로 나누어떨어지는가??
    -> 이거 어떻게 쓰지...? if문? if(조건식)
	나누어 떨어지면 참이다. -> 최소개수 출력가능!
	나누어 떨어지지 않으면. -> 5번
    
5. 5로 나누어떨어지지 않는 경우(else if?) 5를 하나 줄이고,...N에서 한번 빼야함
   남은 N을 3으로 나누는 수식을 쓴다.

   N-5 = M 해서 M을 /5로 나눈값 = 소수점 반내림(?)하면 = j (5kg봉지 개수)
   N-(j*5) = Y 에서 Y를 /3으로 나눈값 = k (3kg봉지 개수)
   j(5kg봉지 개수) + k(3kg봉지 개수) = result(상근이가 배달할 봉지의 최소 개수!!!)


ex)N이 21일 경우.
	21-5=16    | 16/5=3.2 | 반내림(??) = 3
	21-(3*5)=6 |  6/3=2 | = 2
	3+2 = 5(봉지 최소개수)


//구멍은 소수점 내림.....내림 어케하지..?
//내림 함수(FLOOR)
//double test = Math.floor(12.345*100)/100 // 결과: 12.34
  곱하기 100을 한 뒤에 나누기 100을 하는 이유는
  소수점 2째자리까지만 나타나게 하기 위해서 이다.
  정수 값만 필요한 경우, 곱하기와 나누기를 제외하고 사용하면 된다.


=======================================================
[구글링 코드]

...내가 생각한거랑 다른데....;

코드는 if와 else if의 반복. 한 4번정도....
4가지 경우의 조건을 찾는 과정은 표로 정리...
@@; 

구글링크 : https://st-lab.tistory.com/72